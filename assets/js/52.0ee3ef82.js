(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{232:function(_,v,i){"use strict";i.r(v);var l=i(0),t=Object(l.a)({},(function(){var _=this,v=_.$createElement,i=_._self._c||v;return i("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[i("h1",{attrs:{id:"_2진법-변환하기"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_2진법-변환하기"}},[_._v("#")]),_._v(" 2진법 변환하기")]),_._v(" "),i("h2",{attrs:{id:"정수형-음수-변환하기"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#정수형-음수-변환하기"}},[_._v("#")]),_._v(" 정수형 - 음수 변환하기")]),_._v(" "),i("blockquote",[i("p",[_._v("Procedure")])]),_._v(" "),i("ol",[i("li",[_._v("Bit Flip")]),_._v(" "),i("li",[_._v("+1")]),_._v(" "),i("li",[_._v("그 값이 음수의 절대값.")])]),_._v(" "),i("blockquote",[i("p",[_._v("Example")])]),_._v(" "),i("ul",[i("li",[_._v("1111,1111,1001,1011")]),_._v(" "),i("li",[_._v("0000,0000,0110,0100 : 4+32+64 : 100")]),_._v(" "),i("li",[_._v("-101")])]),_._v(" "),i("blockquote",[i("p",[_._v("음수 bit 변환")])]),_._v(" "),i("ol",[i("li",[_._v("+1")]),_._v(" "),i("li",[_._v("|n|")]),_._v(" "),i("li",[_._v("bit flip")])]),_._v(" "),i("blockquote",[i("p",[_._v("Example")])]),_._v(" "),i("ul",[i("li",[_._v("-101")]),_._v(" "),i("li",[_._v("-100 : 100")]),_._v(" "),i("li",[_._v("0000,0000,0110,0100")]),_._v(" "),i("li",[_._v("1111,1111,1001,1011")])]),_._v(" "),i("h2",{attrs:{id:"실수형-변환하기"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#실수형-변환하기"}},[_._v("#")]),_._v(" 실수형 변환하기")]),_._v(" "),i("blockquote",[i("p",[_._v("2진수 소수 변환")])]),_._v(" "),i("ol",[i("li",[_._v("정수부 / 소수부 분할 ( 5.625 -> 5 / 0.625 )")]),_._v(" "),i("li",[_._v("정수부는 원래 방법대로 분할 : 101")]),_._v(" "),i("li",[_._v("소수부는 *2를 하면서 1이 나올때 까지 계산\n"),i("ol",[i("li",[_._v("0.625 * 2 = 1.250 : 1 + 0.250")]),_._v(" "),i("li",[_._v("0.250 * 2 = 0.500 : 0 + 0.500")]),_._v(" "),i("li",[_._v("0.500 * 2 = 1.000 : 1 + 0.0")]),_._v(" "),i("li",[_._v(".625 => .101")])])]),_._v(" "),i("li",[_._v("5.625 => 101.101")])]),_._v(" "),i("h2",{attrs:{id:"floating-point에-대해-더-알아보기"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#floating-point에-대해-더-알아보기"}},[_._v("#")]),_._v(" Floating Point에 대해 더 알아보기")]),_._v(" "),i("blockquote",[i("p",[_._v("부동소수점 IEEE754 Standard Floating Point 구조")])]),_._v(" "),i("ul",[i("li",[i("p",[_._v("32bit = sign(1) + exp(8) + fraction(23) : 단정도")])]),_._v(" "),i("li",[i("p",[_._v("64bit = sign(1) + exp(11) + fraction(52) : 배정도 ( 배가 2배할 때 그 배 )")])]),_._v(" "),i("li",[i("p",[_._v("sign bit : 실수의 양 음 구분")])]),_._v(" "),i("li",[i("p",[_._v("exp : -(2^(n-1)-1) ~ 2^n-1 => at 32, -127 ~ 128")]),_._v(" "),i("ul",[i("li",[_._v("sign bit를 두 개 두기엔 번거로워지는 비교 연산")]),_._v(" "),i("li",[_._v("unsigned 연산으로 만들자 !")]),_._v(" "),i("li",[_._v("2^(n-1)-1 을 bias 값으로 사용")]),_._v(" "),i("li",[_._v("exp : e + bias")])])]),_._v(" "),i("li",[i("p",[_._v("fraction은 우선 1.x로 정규화")]),_._v(" "),i("ul",[i("li",[_._v("1.01101 * 2^2")]),_._v(" "),i("li",[_._v("01101만 취한다.")]),_._v(" "),i("li",[_._v("01101 뒤를 0으로 padding 한다.")])])]),_._v(" "),i("li",[i("p",[_._v("특이점")]),_._v(" "),i("ul",[i("li",[i("p",[_._v("유효숫자가 없는 2 ^  -1 * bias 를 0으로 본다.")])]),_._v(" "),i("li",[i("p",[_._v("유효숫자가 없는 2 ^ ((2^exp-bit) - 1) 를 infinity로 본다.")])]),_._v(" "),i("li",[i("p",[_._v("유효숫자가 있는 2 ^ ((2^exp-bit) - 1) 를 NaN으로 본다.")]),_._v(" "),i("ul",[i("li",[_._v("Not A Number : 허수")])])]),_._v(" "),i("li",[i("p",[_._v("유효숫자가 있는 2 ^  -1 * bias 를 Underflow로 본다.")])])])])])])}),[],!1,null,null,null);v.default=t.exports}}]);