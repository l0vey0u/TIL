(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{256:function(v,_,n){"use strict";n.r(_);var o=n(0),l=Object(o.a)({},(function(){var v=this,_=v.$createElement,n=v._self._c||_;return n("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[n("h2",{attrs:{id:"동기-blocking"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#동기-blocking"}},[v._v("#")]),v._v(" 동기, Blocking")]),v._v(" "),n("blockquote",[n("p",[v._v("동기 <-> 비동기, Blocking <-> Non Blocking")])]),v._v(" "),n("ul",[n("li",[v._v("동기-비동기는 프로세스의 수행 순서 보장이 목적이다.")]),v._v(" "),n("li",[v._v("Blocking-Non Blocking은 프로세스의 유휴상태 ( 동작 상태 )에 대한 개념이다.")])]),v._v(" "),n("blockquote",[n("p",[v._v("동기")])]),v._v(" "),n("ul",[n("li",[n("p",[v._v("Blocking은 농구 기술 용어와 흡사한 기능을 하고, 비 or Non은 반대의 개념이다.")])]),v._v(" "),n("li",[n("p",[v._v("즉 동기가 무엇인지만 알면 해결.")])]),v._v(" "),n("li",[n("p",[v._v("동기는 sync하는 것이다.")]),v._v(" "),n("p",[v._v("단어 ( Synchronous ) 의 사전적 의미를 보면 '정확히 같은 시간에 발생 존재하는 것' 이다.")]),v._v(" "),n("p",[n("img",{attrs:{src:"https://evan-moon.github.io/2019/09/19/sync-async-blocking-non-blocking/synchronized-swimming.jpg",alt:"수영_싱크로"}})]),v._v(" "),n("p",[v._v("위 사진과 같은 것이라 보면 된다.")]),v._v(" "),n("p",[v._v("그럼 컴퓨터에서 동기란 무엇일까?")]),v._v(" "),n("p",[v._v("현재 작업의 응답과 다음 작업의 요청이 동시에 일어나는 것.")]),v._v(" "),n("p",[v._v("이 말 자체가 어떤 순서를 가지고 진행된다는 의미도 된다.")])])]),v._v(" "),n("blockquote",[n("p",[v._v("4가지 방식의 이해")])]),v._v(" "),n("ol",[n("li",[v._v("동기 & Blocking")])]),v._v(" "),n("ul",[n("li",[v._v("우리가 가장 많이 사용하는 방식.")]),v._v(" "),n("li",[v._v("순차적으로 실행되면서 한 프로세스가 실행중일 때 타 프로세스가 동시에 진행될 수 없다.")])]),v._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[v._v("동기 & Non Blocking")])]),v._v(" "),n("ul",[n("li",[v._v("yield가 이 방식의 예라고 할 수 있을 것 같다.")]),v._v(" "),n("li",[v._v("순차적으로 진행되지만 상위 프로세스가 다른 작업을 진행할 수 있다.")]),v._v(" "),n("li",[v._v("동기 === Blocking이 아니라는 점에 유의하자.")])]),v._v(" "),n("ol",{attrs:{start:"3"}},[n("li",[v._v("비동기 & Non Blocking")])]),v._v(" "),n("ul",[n("li",[n("p",[v._v("둘 다 신경쓰지 않겠다. 라고 생각하면 쉽게 생각할 수 있을 것 같다.")]),v._v(" "),n("p",[v._v("프로세스가 순차적으로 실행될 필요가 없으면서 "),n("strong",[v._v("상위")]),v._v(" 프로세스는")]),v._v(" "),n("p",[n("strong",[v._v("하위")]),v._v(" 프로세스에게 일을 맡기고 다른 일을 할 수 있다.")])]),v._v(" "),n("li",[n("p",[v._v("강조까지 했지만 상위와 하위 관계라는 것에 유의하자.")])]),v._v(" "),n("li",[n("p",[v._v("해당 방식은 동시 작업에 편하지만 개발자 입장에선 흐름을 읽을 수 없다는 단점 존재.")]),v._v(" "),n("p",[v._v("그리하여 JS같은 경우 Promise, async / await 같은 개념이 나온 것이다.")])])]),v._v(" "),n("ol",{attrs:{start:"4"}},[n("li",[v._v("비동기 & Blocking")])]),v._v(" "),n("ul",[n("li",[n("p",[v._v("저레벨에서 주로 쓰인다.")])]),v._v(" "),n("li",[n("p",[v._v("욕심이 많은 경우이다. Non Blocking으로 흐름을 읽기가 힘드니까")]),v._v(" "),n("p",[v._v("Blocking으로 I/O 흐름을 읽지만 비동기므로 동시에 처리하겠다는")]),v._v(" "),n("p",[v._v("두 마리 토끼를 다 잡으려는 경우이다.")]),v._v(" "),n("p",[v._v("다만 성능이 좋지 못하다.")])])]),v._v(" "),n("hr"),v._v(" "),n("p",[n("a",{attrs:{href:"https://evan-moon.github.io/2019/09/19/sync-async-blocking-non-blocking/",target:"_blank",rel:"noopener noreferrer"}},[v._v("참조 글 : 동기(Synchronous)는 정확히 무엇을 의미하는걸까?"),n("OutboundLink")],1)])])}),[],!1,null,null,null);_.default=l.exports}}]);