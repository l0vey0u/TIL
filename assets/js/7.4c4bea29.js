(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{273:function(t,l,e){"use strict";e.r(l);var v=e(0),_=Object(v.a)({},(function(){var t=this,l=t.$createElement,e=t._self._c||l;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"즐거운-리버싱"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#즐거운-리버싱"}},[t._v("#")]),t._v(" 즐거운 리버싱")]),t._v(" "),e("blockquote",[e("p",[t._v("올리 디버거 단축키")])]),t._v(" "),e("ul",[e("li",[t._v("F2 : Break Point")]),t._v(" "),e("li",[t._v("Ctrl + F2 : Restart Program")]),t._v(" "),e("li",[t._v("Alt + F2 : Close Program")]),t._v(" "),e("li",[t._v("F7 : Step Into")]),t._v(" "),e("li",[t._v("Ctrl + f7 : Animate Into")]),t._v(" "),e("li",[t._v("F8 : Step Out")]),t._v(" "),e("li",[t._v("F9 : Run ( debug )")]),t._v(" "),e("li",[t._v("Ctrl + F9 : Execute Till Return")]),t._v(" "),e("li",[t._v("Alt + F9 : Execute Till UserCode")])]),t._v(" "),e("blockquote",[e("p",[t._v("Step Into vs Step out")])]),t._v(" "),e("ul",[e("li",[t._v("Step Into : 단일 명령 실행, 함수 호출일시 호출 대상 위치 진입\n, REP ( 반복 코드 ) 일 경우 한 Cycle 실행")]),t._v(" "),e("li",[t._v("Step Out : Step Into와 비슷하나, 함수 호출을 한 명령어로 간주")])]),t._v(" "),e("blockquote",[e("p",[t._v("Animate Into ?")])]),t._v(" "),e("ul",[e("li",[t._v("명령어들을 하나씩 실행하여 함수 호출로 진입")])]),t._v(" "),e("blockquote",[e("p",[t._v("Execute Till Return vs User Code")])]),t._v(" "),e("ul",[e("li",[t._v("전자는 함수의 리턴 전까지 실행 후 중지로 실행 완료지점에 멈출 때 유용")]),t._v(" "),e("li",[t._v("후자는 라이브러리 코드로 들어가 버렸을 때 디버깅 중이였던 코드로 반환되기까지 실행")])]),t._v(" "),e("blockquote",[e("p",[t._v("레지스터 : CPU내 기억장치")])]),t._v(" "),e("ul",[e("li",[t._v("EBP, ESP : 스택 관리")]),t._v(" "),e("li",[t._v("EIP : Instruction Pointer , 현재 실행중인 명령어")]),t._v(" "),e("li",[t._v("EAX : 서브루틴의 반환값")])])])}),[],!1,null,null,null);l.default=_.exports}}]);