SSTF 정리

낮잠을 너무 늦게 자버려서 3시쯤에 야식을 먹을까 잘 까 하던중

오늘이 SSTF날인 것이 생각났다.

그렇게 오늘도 밤새고 SSTF에 갔다.

오전 키노트는 

독일 교수의 IOT Security Model에 대한 내용과
oooverflow.io ( 요번 Defcon ) 진행 팀이자 MS 사원인 Adam의 자동 취약점 분석의 역사와 비젼 ( Black Box Fuzzing )이 있었다.

키노트 시작에 앞서 삼성 보안 과장?이 학생분들은 자신의 방향을 좀 찾아가서 도움이 되셨으면 좋겠다고 하셨는데

난 그게 진짜 마음에 걸렸다.

내가 요즘 진짜 방황하면서 의욕도 없기 때문이다.

일주일은 좀 그런 시간으로 가져야 겠다.

IOT를 듣는데 첫 시작이 앞으로 IOT는 앞으로 수 많은 기기들이 IOT가 될 예측이 많은데

그에 맞춰 고안중인 보안 모델을 설명해주었다.

IOT 기기들은 MAC addr 기반으로 기기 분별이 어렵다, 여러기기가 같은 MAC addr 을 쓰기 때문이다.

그럼 어째야 하는가 fingerprint를 발췌해내야한다.

발표한 모델은 다음과 같다.

Finger print 발췌 -> Gateway 레벨에서 ML(kNN)을 통해 기기 식별 
 -> GRU라는 자동완성 뉴런 네트워크를 사용하여 Profile 생성 -> Device 레벨에서 비정상임을 식별

여기서 중요한 것은 Goal이 Self-healing 자가 치유라는 것

이 교수는 발표도 발표지만 발표태도가 매우 맘에 들었다.

처음에 RemoteController에 문제가 생겨 화면 전환이 안되는 문제가 생겼는데

삼성제품인가보군요? 하면서 웃음으로 넘기고 ㅋㅋ

해결이 꽤 오래걸리자 저 농담 안준비했는데 허허 거린다거나

마지막에 학생이 질문하자

학생! 안잤구나! 매우 자랑스럽다! 라고 하셨다.
( 물론 영어로 ㅋ )

그래서 재밌게 첫 강의를 듣고

두번째 강연은 처음엔 Defcon 진행에 대하여 소개해주었다.

한국팀이 많은게 압권이였다.

그 후 !! 갑자기 내가 열심히 봤던 BlackBox 와 Fuzzing 과 관련된 내용이 발표되었다.

며칠 전까지 나에게 좌절을 주었던 퍼저 프로젝트가 기억이 났다.

내 퍼저 프로젝트는 초딩급이였다면 오늘 들은 내용을 적용한다면 대딩급이 될 것 같다.

여러 취약점 분석 프레임워크들을 소개해주셨지만 
내가 인상적으로 들은 내용은 

1. Web Vuln Structure은

 Crawling Component,
 Attack Component,
 Analysis Component. 로 나뉜다는 것 
 
2. Crawling 결과 비슷한 부류들을 묶어준다는 것 
   ( 각 종류마다 Fuzz Data들이 다르므로 )

3. 전문가들은 소스코드를 추측하면서 공격을 진행한다. 
   -> ** 이것을 컴퓨터에게 맞겨보자 **
   --> Inductive Programming -> 머신러닝 ( Logical / Functional )
   --> 예를 들면 in(1,2,3) => out(1,8,27) 이면 return in*in*in 이구나!
   --> 이걸 어떻게 해야 할까..?
   --> IN / OUT 쌍을 노드화 ::> 해당 노드들을 Intersecting , Partitioning

4. Initial Vector 에 대한 질문이 나왔는데 스피커도
   정도는 없다. 였다. 역시 쳇.

cf ) 내 옆 분이 접는 블루투스 키보드를 가져와서 멋있게 코딩하고 가셨다
     간지...

점심은

역시 삼성 R&D이다.
순대 전골을 먹었는데 
재료가 정성이 느껴진다. 비를 좀 맞아서 몸이 허했었는데 온기가 회복되었다.

점심 이후 해킹이 재밌겠지 하고

EOS ( 듣기 전까지 먼지도 몰랐다. ) 해킹을 들으러 갔는데
중간에 나왔다. 너무나 피곤해서.

일단 들은 내용자체는 좋았다.

우석대때부터 인상적이였던 신정훈이란 보안 컨설턴트가 블록체인에 대해 아주 간단히 링크드리스트! , 첫 노드는 Genesis Node! 라고 설명하고

중요한 것은 블록 생성을 위한 합의 알고리즘 PoW, PoS, DPoS 에 대해 설명 해주셨다.

PoW는 특정 해시 이하의 값을 컴퓨팅 연산을 통해 찾는 것으로 DOS 공격의 위험으로 부터 벗어날 순 있으나 정상유저도 많은 컴퓨팅 연산이 요구되어 블록 생성시간도 늦고 
지구 적으로도 안좋기 때문에 ( 마지막 빙하가 녹았데 속닥속닥 ) 

PoS가 있는데 얘는 경매시스템이라고 보면된다. 자기의 지분을 투자하고 더 샌 지분이 블록으로 생성되는 것이다.
얘는 당연히 PoW보단 빠르다. 하지만 지분 투자에 대한 제약이 거의 없어서 홀짝 문제 ( 홀과 짝에 같은 값을 배팅하면 잃지도 얻지도 않는다는 것 ) 가 있고 
지분이 많은 애가 의도적으로 다른 지분의 유입을 막을 수 있다는 단점이 있었다.

이를 해결하기 위해 나온 D PoS이다 .

D는 Delegate PoS 이다.

국회 의원 시스템이랑 유사한데

N명을 투표를 통해 2분 6초마다 뽑히고 해당 N명만 합의하면 되는 것이다.

그래서 빠른데 문제는

1. 그 N명의 담합
2. 그 N명이 위험 ( 정보를 공개해야 하는데 직간접 APT 공격과 DoS 공격 타겟 )
3. 중앙화 ? ( 탈 중앙화를 Goal로 하던 블록체인이 왜 이러냐! ) 

이다. 

아무튼 이렜고

이제 공격은 어떤식으로 했느냐

일단 알고리즘 자체는 완벽하므로 못건든다.

하지만 실수를 하기때문에 사람이다.

그래서 구현체에대한 공격을 하는 것이다.

EOS 를 쓴 진짜이유는 EOS는 Hackerone ( 버그바운티 사이트 )에 등록되있어 합법적 버그 바운티가 가능하다.
10000$나 준다. ㅎㄷㄷ ( Ned란 어떤 관종자식이 2일만에 10000$ 벌어간 후문 )

공격 방식은 3rd Party Library Attack , Stack BOF 등등인데
공격방식은... 이해가 안되서 생략 ㅎ.....

그 다음에 좀 쉬다가 다른 홀로 들어왔는데 4g 무료로 쓰기 2017 그날의 쿠시스에서 들은 내용의 시연을 보았는데
웃긴것은 ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
질문자가 서울시 사이버청 수사과요? 스피커 급 당황ㅋㅋㅋ 홀 웃음 바다 ㅋㅋ


그후엔 차 보안에 대한 강연이 진행되었다.
 차 보안 설명에도 퍼징이 쓰이네 걍 퍼징이 겁나 흔한 단어인가 보다.
인코 RC카때 아쉽게 못했다던 Real World 해킹 ( 리플레이 어택, DOS ) 등을 시연해주셨다. 대리만족 ㅎㅎ 

아 맞다 Poster Session 에서 인상적인 두개가 있었다.

1. Android 5.0 ART 를 쓰면서 Pre Compile 로 OAT를 사용했는데 이 녀석이 보안적으로 완벽하다곤 했지만 취약했다는 것
2. QEMU ( Emulator ) 과 Real Device 를 구별하는 법
 (1) Finger Print -> CPU Model 등 QEMU랑은 구별되는 특징들로 구별하기
  - 당연히 속도는 매우 빠르다 ㅋ , 근데 오탐지가 많다. 왜냐? 위장이 쉽다.
 (2) Race Condition -> Real Device 는 당하지 않는 공격을 하여 구별
 (3) TB Cache -> Emulator 가 성능을 위해 사용하는 가상 캐시 시스템을 이용
 (*)4(*) Unalign Access : 정렬되지 않은 ( 4byte 단위가 아닌 ) 메모리 엑서스로 구별하기 이게 Real Device 는 알아서 처리하는데 
			 Qemu 는 아니래 이것의 장점이 Finger Print보다 오진율이 적으면서 앞선 두개 보다 빠르데 오홓



cf. 브라우저 마이닝 코드 삽입 attack -> CTF 문제 각? ㅋㅋ
cf. Dark Web : Tor Browser -> ㅋㅋㅋ

TMAX 개발자 ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
눙물

진심 느낀건데 누가 개발자에 미녀없뎄냐 오늘만 모델 뺨치는 분 두분 봄 남녀.

머신 러닝의 문제점 : 맹신에 대한 위험 ( 실패도 한다구유 )

TTPDrill -> 논문 컨셉 : 보안 ( CVE, 카스퍼스키 ) 문제와 처치에 대한 Report를 자동으로 보기쉽게 정리해주는 WOrk FLow

Threat Action Ontology

Rumor detection in Twitter Based on propagation structure -> 그래프화하여 Fake News 와 정상 News가 터지는 형태가 다르더라 를 이용

But 공격자가 정상News 와 비슷하게 만들면...

Deep Learning-based automated crowdturfing attack generation and defense -> 키워드를 이용하여 자동으로 문장을 만듬

ML != GOD 

 머신러닝 알고리즘이 모든 환경에서 똑같이 동작하지 않을 것이라는것을 인지해야한다.

 Feature add -> Domain add -> Class add 

  -> 기하급수적 증가...